<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.online_shopping_website.mapper.OrderMapper">
    <resultMap id="OrderMap" type="com.example.online_shopping_website.entity.Order">
        <result column="orderId" property="orderId"/>
        <result column="username" property="username"/>
        <result column="addressId" property="addressId"/>
        <result column="shopName" property="shopName"/>
        <result column="orderTime" property="orderTime"/>
        <result column="goodsId" property="goodsId"/>
        <result column="goodsName" property="goodsName"/>
        <result column="unitPrice" property="unitPrice"/>
        <result column="goodsNum" property="goodsNum"/>
        <result column="totalPrice" property="totalPrice"/>
        <result column="actualPayment" property="actualPayment"/>
        <result column="status" property="status"/>
        <result column="isPromotionEffective" property="isPromotionEffective"/>
        <result column="parentOrderId" property="parentOrderId"/>
    </resultMap>
    <resultMap id="ParentOrderMap" type="com.example.online_shopping_website.entity.ParentOrder">
        <result column="parentOrderId" property="parentOrderId"/>
        <result column="totalPrice" property="totalPrice"/>
        <result column="actualPayment" property="actualPayment"/>
        <result column="reducedPayment" property="reducedPayment"/>
        <result column="isPromotionEffective" property="isPromotionEffective"/>
    </resultMap>

    <!--  用useGeneratedKeys和keyProperty把自动增长的orderId返回Order类  -->
    <insert id="creatOrder" parameterType="com.example.online_shopping_website.entity.Order" useGeneratedKeys="true" keyProperty="orderId">
        insert into orders (username, shopName,orderTime, goodsId, goodsName, unitPrice, goodsNum, totalPrice, actualPayment,addressId, status, isPromotionEffective, parentOrderId)
            values
        (#{username}, #{shopName}, #{orderTime}, #{goodsId}, #{goodsName}, #{unitPrice}, #{goodsNum},#{totalPrice}, #{actualPayment}, #{addressId}, #{status}, #{isPromotionEffective}, #{parentOrderId});
    </insert>

    <select id="getOrderByOrderId" resultMap="OrderMap">
        SELECT * FROM orders WHERE orderId = #{orderId};
    </select>

    <select id="getAllOrdersByUsername" resultMap="OrderMap">
        SELECT * FROM orders WHERE username = #{username} AND status != -1;
    </select>

    <select id="getUsernameByOrderId" resultType="java.lang.String">
        SELECT username FROM orders WHERE orderId = #{orderId};
    </select>

    <select id="getActualPaymentByOrderId" resultType="java.math.BigDecimal">
        SELECT actualPayment FROM orders WHERE orderId = #{orderId};
    </select>

    <update id="SetOrderToPendingDeliveryByOrderId">
        UPDATE orders SET status = 1 WHERE orderId = #{orderId};
    </update>

    <select id="GetOrderStatusByOrderId" resultType="int">
        SELECT status FROM orders WHERE orderId = #{orderId};
    </select>

    <update id="CancelOrderByOrderId">
        UPDATE orders SET status = 5 WHERE orderId = #{orderId};
    </update>

    <update id="SetOrderToFinishedByOrderId">
        UPDATE orders SET status = 4 WHERE orderId = #{orderId};
    </update>

    <select id="GetShopNameByOrderId" resultType="java.lang.String">
        SELECT ShopName FROM orders WHERE orderId = #{orderId};
    </select>

    <select id="GetGoodsIdByOrderId" resultType="int">
        SELECT goodsId FROM orders WHERE orderId = #{orderId};
    </select>
    
    <select id="GetGoodsNumByOrderId" resultType="int">
        SELECT goodsNum FROM orders WHERE orderId = #{orderId};
    </select>

    <select id="GetOrdersByStatus" resultMap="OrderMap">
        SELECT * FROM orders WHERE username = #{username} AND status = #{status};
    </select>

    <update id="SetOrderToPendingReception">
        UPDATE orders SET status = 2 WHERE orderId = #{orderId};
    </update>

    <update id="SetOrderToDeleted">
        UPDATE orders SET status = -1 WHERE orderId = #{orderId};
    </update>

    <update id="SetOrderToPendingRefund">
        UPDATE orders SET status = 3 WHERE orderId = #{orderId};
    </update>

    <update id="SetOrderToRefunded">
        UPDATE orders SET status = 6 WHERE orderId = #{orderId};
    </update>

    <select id="GetOrdersByShopName" resultMap="OrderMap">
        SELECT * FROM orders WHERE shopName = #{shopName};
    </select>

    <select id="GetOrdersByShopNameAndStatus" resultMap="OrderMap">
        SELECT * FROM orders WHERE shopName = #{shopName} and status = #{status};
    </select>

    <select id="GetMonthlySalesByShopName" resultType="int">
        SELECT SUM(goodsNum) FROM orders WHERE shopName = #{shopName} AND status = 4;
    </select>

    <insert id="CreateParentOrder" parameterType="com.example.online_shopping_website.entity.ParentOrder" useGeneratedKeys="true" keyProperty="parentOrderId">
        INSERT INTO parentorder (totalPrice, actualPayment, reducedPayment, isPromotionEffective)
            VALUES
                (0, 0, 0, 0)
    </insert>

    <update id="UpdateParentOrder">
        UPDATE parentorder SET totalPrice = #{totalPrice},
                               actualPayment = #{actualPayment},
                               reducedPayment = #{reducedPayment},
                               isPromotionEffective = #{isPromotionEffective}
                WHERE parentOrderId = #{parentOrderId};
    </update>

    <select id="GetActualPaymentBySubOrderId" resultType="java.math.BigDecimal">
        SELECT parentOrderId FROM orders WHERE orderId = #{orderId};
    </select>
    <select id="IsOrderInPromotion" resultType="boolean">
        SELECT COUNT(*) FROM orders WHERE orderId =#{orderId} AND isPromotionEffective = 1;
    </select>
    <select id="GetParentOrderId" resultType="int">
        SELECT parentOrderId FROM orders WHERE orderId = #{orderId}
    </select>
    <select id="GetParentOrderByParentOrderId" resultMap="ParentOrderMap">
        SELECT * FROM parentorder WHERE parentOrderId = #{parentOrderId};
    </select>
    <select id="GetActualPaymentByParentOrderId" resultType="java.math.BigDecimal">
        SELECT actualPayment FROM parentorder WHERE parentOrderId = #{parentOrderId};
    </select>
    <update id="SetAllSubOrderOfParentOrderPaid">
        UPDATE orders SET status = 1 WHERE parentOrderId =#{parentOrderId};
    </update>
</mapper>